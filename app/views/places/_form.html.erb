<input type="text" name="" value="">
<div id="map"></div>
<div id="right-panel">
  <h2>Results</h2>
  <ul id="places"></ul>
  <button id="more">More results</button>
</div>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBZTzMEdD2iN5NkYojIHUeJtNi6_NIWla4&libraries=places&callback=initMap" async defer></script>
<script type="text/javascript">
    var map;
    var nameAddress = "";
    var address = "";
    var previousMarker;
    var lat = 0;
    var lng = 0;
    var li = document.createElement('li');
    function initMap() {
      // Create the map.
      if(lat != 0) {
      var pyrmont = {lat: lat, lng: lng};
    } else {
      var pyrmont = {lat: 49.451703, lng: 32.045537};
    }
      map = new google.maps.Map(document.getElementById('map'), {
        center: pyrmont,
        zoom: 17
      });

      map.addListener('click', function(e) {
       // if the previousMarker exists, remove it
       if (previousMarker)
         previousMarker.setMap(null);

       latLng = e.latLng;

       lat = e.latLng.lat()
       lng = e.latLng.lng()
       console.log(lat);
       console.log(lng);
       initMap();
       //image = clientURL + "/common/images/markers/red.png";
       console.log("Marker");
       previousMarker = new google.maps.Marker({
         position: latLng,
         map: map
       });
     }

   );

      // Create the places service.
      var service = new google.maps.places.PlacesService(map);
      var getNextPage = null;


      var moreButton = document.getElementById('more');
      moreButton.onclick = function() {
        moreButton.disabled = true;
        if (getNextPage) getNextPage();
      };

      // Perform a nearby search.
      service.nearbySearch(
      {location: pyrmont, radius: 100, type: ['store']},
      function(results, status, pagination) {
        if (status !== 'OK') return;

        createMarkers(results);
        moreButton.disabled = !pagination.hasNextPage;
        getNextPage = pagination.hasNextPage && function() {
          pagination.nextPage();
        };
      });
    }
    var loc;
    function createMarkers(places) {
      var bounds = new google.maps.LatLngBounds();
      var placesList = document.getElementById('places');

      for (var i = 0, place; place = places[i]; i++) {
        var image = {
          url: place.icon,
          size: new google.maps.Size(71, 71),
          origin: new google.maps.Point(0, 0),
          anchor: new google.maps.Point(17, 34),
          scaledSize: new google.maps.Size(25, 25)
        };

        var marker = new google.maps.Marker({
          map: map,
          icon: image,
          title: place.name,
          position: place.geometry.location
        });


        li.textContent = place.name;
        nameAddress += place.place_id + "; " //+ "?" + place.geometry.location + "; " + place.plus_code;
        placesList.appendChild(li);

        bounds.extend(place.geometry.location);
      }
      console.log(nameAddress)
      map.fitBounds(bounds);
      document.getElementById("place_name").value = nameAddress.toString();
      nameAddress = "";
      li.textContent = "";
    }
  </script>

<%# provide :head_tags do %>
  <!-- <script>
    document.addEventListener("turbolinks:load", initMap());
  </script> -->
<%# end %>

<%= form_with(model: place, local: true) do |form| %>
  <% if place.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(place.errors.count, "error") %> prohibited this place from being saved:</h2>

      <ul>
      <% place.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.hidden_field :name, id: :place_name %>
  </div>

  <div class="actions">
    <%= form.submit %>
  </div>


<% end %>
